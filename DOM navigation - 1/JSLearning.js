"use strict";

// document - точка входа для начала всех операций с DOM.
const htmlElement = document.documentElement;
const headElement = document.head;
const bodyElement = document.body;

// console.log(bodyElement.firstChild); // Текстовый узел переноса строки.
// console.log(bodyElement.lastChild); // Узел-элемент script, по которому подключается к HTML данный файл js.

// // В DOM используются понятия дочерние узлы и потомки. Дочерние узлы - узлы которые принадлежат родительскому узлу. НЕ включая детей дочернего узла.
// // Потомки - ВСЕ узлы, которые лежат в определенном родительском узле, ключая дочерние узлы дочерних узлов.

// // Перебор всех дочерних узлов body.
// for (const node of bodyElement.childNodes) {
//   console.log(node);
// }

// // Проверка наличия дочерних узлов у body.
// console.log(bodyElement.hasChildNodes()); //true

// // Соседи - узлы имеющие одного и того же родителя.
// // Например теги head и body являются соседями и имеют общего родителя html.

// // Для перехода от соседа к соседу используются свойства nextSibling и previousSibling.
// console.log(headElement.nextSibling.nextSibling); // body
// // Сойство использовано два раза из-за того, что после закрывающего тега </head> выполнен перевод строки и первый случай использования свойства
// // вывел бы текстовый узел, в случае когда перевод строки не выполнялся бы, достаточно было бы одного использования свойства nextSibling.

// // ---------------------------------------------------------------------------------------------------------------------------------------------
// // Средства навигации описанные выше используются для навигации по ВСЕМ узлам документа. Ниже будут описаны способы для навигации только по
// // узлам-элементам. Для большинства задач требуется навигация только по узлам-элементам, не затрагивая текстовые узлы и узлы-комментариию
// // ---------------------------------------------------------------------------------------------------------------------------------------------

// // Выводит коллекцию элементов указанного объекта, в данном случае body.
// console.log(bodyElement.children); // HTMLCollection(4) [h1.centerHeader, h3, div.classContainer, script]

// // Выводит первый дочерний элемент.
// console.log(bodyElement.firstElementChild); // <h1>...</h1>
// // Точно также работает obj.lastElementChild, но выводит последний дочерний элемент;
// console.log(bodyElement.lastElementChild); // <script></script>

// // nextElementSibling и previousElementSibling работают как и свойства описанные выше, но перемещаются по соседним ЭЛЕМЕНТАМ.

// // Существует два схожих свойства parentElement и parentNode, дело в чтом, что parentElement возвращает только родительский узел-элемент, в случае
// // его отсутствия возвращает null, parentNode возвращает ЛЮБОЙ родительский элемент.
// console.log(htmlElement.parentNode); // document
// console.log(htmlElement.parentElement); // null

// // Вывод всех дочерних элементов узла body.
// for (const element of bodyElement.children) {
//   console.log(element);
// }

// // ------------------------------------------------------------- ИТОГ: --------------------------------------------------------------------------
// // Получив DOM-узел, мы можем перейти к его ближайшим соседям используя навигационные ссылки.

// // Есть два основных набора ссылок:

// // Для всех узлов: parentNode, childNodes, firstChild, lastChild, previousSibling, nextSibling.
// // Только для узлов-элементов: parentElement, children, firstElementChild, lastElementChild, previousElementSibling, nextElementSibling.

// // Некоторые виды DOM-элементов, например таблицы, предоставляют дополнительные ссылки и коллекции для доступа к своему содержимому.
// // ----------------------------------------------------------------------------------------------------------------------------------------------
